<?xml version="1.0" encoding="utf-8"?>
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" add="popUpLabs_addHandler(event)">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout gap="20" horizontalAlign="center"/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			
			import spark.components.View;
			
			
			private var _width:int;
			private var _height:int;
			private var _acronym:String;
			private var _definition:String;
			private var _reference:String;
			private var _indicator:String;
			
			
			[Bindable]
			public function get acronym():String{
				return _acronym;
			}
			
			public function set acronym( acronym:String ):void{
				_acronym = acronym;
			}
			
			[Bindable]
			public function get definition():String{
				return _definition;
			}
			
			public function set definition( definition:String ):void{
				_definition = definition;
			}
			
			[Bindable]
			public function get indicator():String{
				return _indicator;
			}
			
			public function set indicator( indicator:String ):void{
				_indicator = indicator;
			}
			
			[Bindable]
			public function get reference():String{
				return _reference;
			}
			
			public function set reference( reference:String ):void{
				_reference = reference;
			}
			
			public function get availWidth():int{
				return width;
			}
			
			public function set availWidth( w:int ):void{
				width = w;
			}
			
			public function get availHeight():int{
				return height;
			}
			
			public function set availHeight( h:int ):void{
				height = h;
			}
			
			
			
			protected function popUpLabs_addHandler(event:FlexEvent):void
			{
				VitalSigns.registerOrientationChangeListener( relocate );
				relocate( parentApplication.stage.width,parentApplication.stage.height );
				
				this.addEventListener(FlexMouseEvent.MOUSE_DOWN_OUTSIDE,this.close)
				this.setFocus();
			}
			
			protected function removeListener():void{
				VitalSigns.removeOrientationChangeListener( relocate );
			}
			
			public function relocate( x:int,y:int):void{
				this.width = x * 0.8;
				this.height = 70;
				this.move( ( x - this.width ) / 2, ( y - this.height ) / 2 );
			}
		]]>
	</fx:Script>
	
	
	<s:Group width="100%">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xDEDEDE"/>
			</s:fill>
		</s:Rect>
		<s:VGroup width="100%" height="50%" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10" horizontalAlign="center" gap="10">
			<s:Label text="{acronym}" width="100%" textAlign="center"/>
			<s:Line width="100%" >
				<s:stroke>
					<s:SolidColorStroke color="#000000" weight="2"/>		
				</s:stroke>		
			</s:Line>
			<!--<s:Spacer height="2">
			</s:Spacer>-->
			<s:HGroup width="100%" horizontalAlign="left" paddingTop="2">
				<s:Label text="{definition}" width="100%" textAlign="left" paddingLeft="2"/>
			</s:HGroup>
			<s:HGroup width="100%" horizontalAlign="left" paddingTop="2">
				<s:Label text="Range Reference:" textAlign="left" paddingRight="2" paddingLeft="2"/>
				<s:Label text="{reference}" textAlign="left"/>
			</s:HGroup>
			<s:HGroup width="100%" horizontalAlign="left" paddingTop="2" paddingBottom="2">
				<s:Label text="Range Indicator:" textAlign="left" paddingRight="2" paddingLeft="2"/>
				<s:Label text="{indicator}" textAlign="left"/>
			</s:HGroup>
		</s:VGroup>
	</s:Group>
	
</s:SkinnablePopUpContainer>
