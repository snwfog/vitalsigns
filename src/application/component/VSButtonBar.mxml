<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			import mx.core.UIComponent;
			
			import spark.components.VGroup;
			import spark.components.View;
			import spark.events.IndexChangeEvent;
			
			
			[Bindable]private var _requireSelection:Boolean;
			[Bindable]private var _dataProvider:ArrayCollection;
			
			public function get dataProvider():ArrayCollection{
				return _dataProvider;
			}
			
			public function set dataProvider( list:ArrayCollection ):void{
				_dataProvider = list;
			}
			
			public function get requireSelection():Boolean{
				return _requireSelection;
			}
			
			public function set requireSelection( value:Boolean ):void{
				_requireSelection = value;
			}
			
			public function get selectedItem():*{
				return host.selectedItem;
			}
			
			public function set selectedItem( value:* ):void{
				host.selectedItem = value;
			}
			
			public function get selectedIndex():int{
				return host.selectedIndex;
			}
			
			public function set selectedIndex( value:int ):void{
				host.selectedIndex = value;
			}
			
			protected function host_changeHandler( event:IndexChangeEvent ):void{
				var parent:DisplayObjectContainer = this.parent;
				while( !( parent is VGroup && ( parent as UIComponent ).styleName == "formRow" ) ){
					parent = parent.parent;
				}
				
				var wrapper:DisplayObjectContainer = parent.parent;
				var nextFormRow:UIComponent = wrapper.getChildAt( wrapper.getChildIndex( parent ) + 1 ) as UIComponent;
				
				var isFound:Boolean = false;
				for( var i:int = 0; i < nextFormRow.numChildren && !isFound; i++ ){
					var child:DisplayObject = nextFormRow.getChildAt( i );
					if( ( isFound = ( child is Button || child is DropDownEntry ) ) )
						( child as UIComponent ).dispatchEvent( new MouseEvent( MouseEvent.CLICK ) );
				}
			}
			
		]]>
	</fx:Script>
	
	<s:ButtonBar id="host" width="100%" height="100%" color="#FFFFFF" fontSize="30" chromeColor="#A71D1B"
				 fontStyle="normal" fontWeight="bold" requireSelection="{_requireSelection}" change="host_changeHandler(event)"
				 textAlign="center" dataProvider="{_dataProvider}" />
	
</s:SkinnableContainer>
