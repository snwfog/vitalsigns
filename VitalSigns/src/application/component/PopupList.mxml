<?xml version="1.0" encoding="utf-8"?>
<s:SkinnablePopUpContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
						   xmlns:s="library://ns.adobe.com/flex/spark" 
						   backgroundColor="0x656565"
						   contentBackgroundColor="0xDEDEDE" add="popupList_addHandler(event)">
	<s:layout>
		<s:VerticalLayout gap="20" horizontalAlign="center" />
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			private var _dataProvider:ArrayCollection;
			private var _labelField:String;
			private var _allowMultipleSelection:Boolean;
			private var _selectedItem:int;
			private var _callback:Function;
			
			[Bindable]
			public function get selectedItem():int {
				return _selectedItem;
			}
			
			public function set selectedItem(v:int):void {
				_selectedItem = v;
			}
			
			public function get currentWidth():int{
				return this.width;
			}
			
			public function set currentWidth( w:int ):void{
				width = w;
			}
			
			public function get currentHeight():int{
				return this.height;
			}
			
			public function set currentHeight( h:int ):void{
				height = h;
			}
			
			[Bindable]
			public function get allowMultipleSelection():Boolean {
				return _allowMultipleSelection;
			}
			
			public function set allowMultipleSelection(v:Boolean):void {
				_allowMultipleSelection = v;
			}
			
			[Bindable]
			public function get labelField():String {
				return _labelField;
			}
			
			public function set labelField(v:String):void {
				_labelField = v;
			}
			
			[Bindable]
			public function get dataProvider():ArrayCollection {
				return _dataProvider;
			}
			
			public function set dataProvider(v:ArrayCollection):void {
				_dataProvider = v;
			}
			
			public function set defaultSelected( item:String ):void{
				selectedItem = _dataProvider.getItemIndex( item );
			}
			
			public function set callback( f:Function ):void{
				_callback = f;
			}
			
			private function onClick(commit:Boolean):void {
				VitalSigns.removeOrientationChangeListener( onOrientationChange );
				if( _callback != null )
					_callback( commit, list.selectedIndex );
				super.close(commit, list.selectedIndex);
			}
			
			protected function popupList_addHandler(event:FlexEvent):void
			{
				VitalSigns.registerOrientationChangeListener( onOrientationChange );
				this.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
				this.setFocus();
			}
			
			protected function onKeyDown(event:KeyboardEvent):void
			{
				if(event.keyCode == Keyboard.BACK)
				{	
					event.preventDefault();
					close();				
				}
			}
			
			protected function onOrientationChange( x:int, y:int ):void{			
				currentWidth = x * 0.8;
				currentHeight = y * 0.8;
				this.move( ( x - currentWidth ) / 2, ( y - currentHeight ) / 2 );
			}
			
		]]>
	</fx:Script>
	<s:Group width="100%" height="100%">
		<s:Rect radiusX="10" radiusY="10" width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xDEDEDE"/>
			</s:fill>
		</s:Rect>
		<s:VGroup width="100%" height="100%" paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10">
			<s:Label text="Select an item:" width="100%"/>
			<s:List id="list" width="100%" height="100%" 
					dataProvider="{dataProvider}" 
					labelField="{labelField}"
					selectionColor="#BB0000"
					allowMultipleSelection="false"
					selectedIndex="{selectedItem}"/>
			<s:HGroup width="100%" >
				<s:Button label="OK" width="50%" click="onClick(true)"/>
				<s:Button label="Cancel" width="50%" click="onClick(false)"/>
			</s:HGroup>
		</s:VGroup>
	</s:Group>
</s:SkinnablePopUpContainer>
